<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:jms="http://www.springframework.org/schema/jms"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath*:*.properties" />
	<context:component-scan base-package="com.meiya.alarm">
		<context:include-filter type="annotation" expression="com.meiya.alarm.scan.processor.Processor"></context:include-filter>
	</context:component-scan>

	<import resource="spring-threadpool.xml"/>

	<!-- Spring上下文工具类 -->
	<bean class="com.meiya.alarm.util.SpringContextHolder" lazy-init="false" />

	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>${alarm.activeMQ.url}</value>
				</property>
				<property name="useAsyncSend" value="true" />
				<property name="optimizeAcknowledge" value="true" />
			</bean>
		</property>
		<property name="maxConnections" value="2" /><!-- default 1 -->
		<property name="idleTimeout" value="60000" /><!-- default 30 * 1000 -->
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref bean="connectionFactory" />
		</property>
		<property name="deliveryPersistent" value="false" />
	</bean>

	<!--<bean id="gson" class="com.google.gson.GsonBuilder."/>-->

	<aop:aspectj-autoproxy />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="${alarm.driver}" />
		<property name="url" value="${alarm.url}" />
		<property name="username" value="${alarm.username}" />
		<property name="password" value="${alarm.password}" />
		<!--配置初始化大小 最小 最大-->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="10" />
		<!--配置获取链接等待超时的时间-->
		<property name="maxWait" value="10000" />
		<!--配置间隔多久才进行一次检测 检测需要关闭的空闲链接 单位是毫秒-->
		<property name="timeBetweenEvictionRunsMillis" value="300000" />
		<property name="testWhileIdle" value="true"/>

		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--<property name="configLocation" value="classpath:mybatis-config.xml"-->
		<property name="mapperLocations" value="classpath*:com/meiya/alarm/pojo/**/*.xml" />
	</bean>

	<!--DAO接口所在包名 spring会自动查找旗下的类 包下的类需要用@MapperScan注解-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.meiya.alarm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
		<property name="hostName" value="${redis.hostName}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" >
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<!--fel引擎-->
	<bean id="felEngine" class="com.greenpineyu.fel.FelEngineImpl" />

	<!--jodatime-->
	<bean id="joda" class="org.joda.time.DateTime" />

</beans>